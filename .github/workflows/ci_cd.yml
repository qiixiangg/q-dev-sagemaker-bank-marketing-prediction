name: Bank Marketing Prediction CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.4'  # Specific version to avoid Black AST safety issue
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libomp-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov  # Explicitly install pytest-cov
    
    - name: Download data
      run: |
        python scripts/download_data.py
    
    - name: Run tests
      run: |
        python -m pytest tests/ --cov=src --cov-report=xml
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    - name: Build and run tests
      run: |
        docker-compose build test
        docker-compose run test
    
    - name: Run pipeline in Docker
      run: |
        docker-compose up -d pipeline
        docker-compose logs pipeline
        docker-compose down

  build-and-push:
    needs: [test-python, test-docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/bank-marketing:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/bank-marketing:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bank-marketing:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/bank-marketing:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Create data directories
      run: |
        mkdir -p data/raw data/processed models logs
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add deployment steps here (e.g., updating k8s manifests, triggering CD pipeline)
